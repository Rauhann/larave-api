version: '3.7'

volumes:
    laravel-mysql:
        driver: 'local'
    laravel-cache:
        driver: 'local'

networks:
    laravel-net:
        driver: 'bridge'

services:
    db:
        container_name: laravel-db
        image: mysql:8.0
        volumes:
            - laravel-mysql:/var/lib/mysql
        restart: always
        tty: true
        ports:
            - "3000:3306"
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
        networks:
            - laravel-net

    cache:
        container_name: laravel-redis
        image: redis:7.0-rc1-alpine3.15
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        volumes:
            - laravel-cache:/data
        ports:
            - "3001:6379"
        restart: always
        networks:
            - laravel-net

    webserver:
        container_name: laravel-nginx
        image: nginx:1.21.6
        volumes:
            - ./:/app
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
        ports:
            - "5000:80"
            - "5001:443"
        restart: always
        depends_on:
            - db
            - app
            - cache
        tty: true
        networks:
            - laravel-net

    app:
        container_name: laravel-php
        build:
            context: .
            dockerfile: ./docker/Dockerfile
        volumes:
            - ./:/app
        ports:
            - "9000"
        restart: always
        tty: true
        networks:
            - laravel-net
